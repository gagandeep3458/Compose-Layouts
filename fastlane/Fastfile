update_fastlane

default_platform(:android)

platform :android do

  desc "Submit a Beta Build to App Center"
  lane :distribute do |options|
    env = options[:env]
    Dotenv.overload ".env.#{env}"
    print_all(options)
    build_the_app()
    deploy_to_appcenter()
    slack(
    slack_url: ENV["SLACK_URL"],
    message: "#{app_center_app_name}(#{env}) successfully deployed to AppCenter!",
    payload: {
    "Build Version" => project_full_version_string,
    "Git Branch" => git_branch,
    })
  end

  def build_the_app
    if is_ci
      version_code = ENV["BITRISE_BUILD_NUMBER"]
    else
      version_code = UI.input("Version Code:")
    end
    increment_version_code(gradle_file_path: gradle_file_path, version_code: version_code)
    gradle(
      task:gradle_task, 
      flavor:gradle_flavor,
      build_type: gradle_build_type
    )
  end

  def deploy_to_appcenter()
    appcenter_upload(
      api_token: "e62eaa7d7ae37bfeb61f7c2e234b31cf10185e08",
      owner_name: "gagan3458",
      owner_type: "user", # Default is user - set to organization for appcenter organizations
      destination_type: "group",
      destinations: app_center_distribution_groups,
      app_name: "ComposeLayouts",
      apk: apk_build_path,
      notify_testers: true # Set to false if you don't want to notify testers of your new release (default: `false`)
    )
  end

  def gradle_task
    ENV["GRADLE_TASK"]
  end

  def gradle_flavor
    ENV["GRADLE_FLAVOR"]
  end

  def gradle_build_type
    ENV["GRADLE_BUILD_TYPE"]
  end

  def gradle_file_path
    ENV["GRADLE_FILE_PATH"]
  end

  def playstore_track
    ENV["PLAYSTORE_TRACK"]
  end

  def deploy_platform
    ENV["DEPLOY_PLATFORM"]
  end

  def aab_build_path
    ENV["GRADLE_AAB_OUTPUT_PATH"]
  end

  def publishing_package_name
    ENV["PACKAGE_NAME"]
  end

  def apk_build_path
    ENV["GRADLE_APK_OUTPUT_PATH"]
  end

  def app_center_app_name
    ENV["APPCENTER_APP_NAME"]
  end

  def app_center_distribution_groups
    ENV["APPCENTER_DISTRIBUTION_GROUPS"]
  end

  def project_full_version_string
    return "#{android_get_version_name}##{android_get_version_code}"
  end

  def print_all(options)
    puts "Options: "
    puts options

    puts "Loading Env: "
    puts ".env.#{options[:env]}"

    puts "Gradle File Path: "
    puts gradle_file_path

    puts "Gradle Task: "
    puts gradle_task

    puts "Gradle Flavor: "
    puts gradle_flavor

    puts "Gradle Build Type: "
    puts gradle_build_type

    puts "Deploy Platform: "
    puts deploy_platform

    if deploy_platform == $appcenter
        puts "App Center App name: "
        puts app_center_app_name

        puts "App Center Distribution Groups: "
        puts app_center_distribution_groups
    end
  end
end


